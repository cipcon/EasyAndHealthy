package my.groupId.fridge;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

public class KeineAhnungModus {
	public void findeVerfuegbareRezepte() {
		Vorraete vor = new Vorraete();
		Map<String, Double> vorhandeneZutaten = vor.getZutaten(1);
		
		Rezept rez = new Rezept();
		List<Rezept> alleRezepte = rez.getAlleRezepte();
		
		List<Rezept> verfuegbareRezepte = new ArrayList<>();
		for (Rezept r : alleRezepte) {
			Map<String, Double> benoetigteZutaten = r.getZutaten(r.getRezeptId());
			
			boolean kannGekochtWerden = true;
			for (Map.Entry<String, Double> entry : benoetigteZutaten.entrySet() ) {
				String zutat = entry.getKey();
				double menge = entry.getValue();
				if(!vorhandeneZutaten.containsKey(zutat) || vorhandeneZutaten.get(zutat) < menge) {
					kannGekochtWerden = false;
					break;
				}
			}
			if(kannGekochtWerden) {
				verfuegbareRezepte.add(r);
			}
		}
		if (verfuegbareRezepte.isEmpty()) {
			System.out.println("Keine Rezepte verfügbar.");
		}
		else {
			System.out.println("Verfügbare Rezepte:");
			Set<Integer> ausgegebeneRezepte = new HashSet<>();
			for (Rezept r : verfuegbareRezepte) {
				int rezeptId = r.getRezeptId();
				if (!ausgegebeneRezepte.contains(rezeptId)) {
				System.out.println(r.getRezeptId());
				ausgegebeneRezepte.add(rezeptId);
				}
			}
		}
	}
}
